// scripts/expand-knowledge-base-dual.js - Vers√£o MySQL/SQLite compat√≠vel
require('dotenv').config();

async function expandKnowledgeBase() {
    const { executeQuery, getDatabaseType, initDatabase } = require('../src/config/database');
    
    try {
        console.log('üöÄ Criando Base de Conhecimento Profissional...');
        
        // Inicializar banco (vai detectar automaticamente MySQL ou SQLite)
        await initDatabase();
        const dbType = getDatabaseType();
        console.log(`‚úÖ Conectado ao ${dbType.toUpperCase()}`);
        
        // Pegar autor existente
        const users = await executeQuery('SELECT id FROM users LIMIT 1');
        const authorId = users.length > 0 ? users[0].id : '1';
        
        // Limpar artigos existentes
        await executeQuery('DELETE FROM knowledge_base WHERE 1=1');
        console.log('üßπ Base de conhecimento limpa');
        
        // Artigos profissionais
        const articles = [
            {
                title: "Metodologia de Troubleshooting CompTIA",
                slug: "metodologia-troubleshooting-comptia",
                category: "sistema", 
                subcategory: "metodologia",
                priority: "alta",
                tags: "troubleshooting,comptia,metodologia,diagnostico",
                summary: "Guia da metodologia estruturada CompTIA para resolu√ß√£o de problemas de TI em 6 etapas sistem√°ticas.",
                content: `# Metodologia CompTIA de Troubleshooting

## As 6 Etapas Fundamentais

### 1. Identificar o Problema
- Coletar informa√ß√µes do usu√°rio
- Reproduzir o problema quando poss√≠vel
- Questionar sobre mudan√ßas recentes
- Documentar sintomas observados

**Perguntas Essenciais:**
- Quando o problema come√ßou?
- O que mudou recentemente?
- O problema √© consistente?
- Outros usu√°rios s√£o afetados?

### 2. Estabelecer Teoria da Causa
- Come√ßar com causas mais √≥bvias
- Considerar m√∫ltiplas possibilidades
- Usar processo de elimina√ß√£o
- Consultar documenta√ß√£o se necess√°rio

### 3. Testar a Teoria
- Se confirmada: prosseguir para solu√ß√£o
- Se n√£o confirmada: criar nova teoria
- Escalar se necess√°rio

### 4. Estabelecer Plano de A√ß√£o
- Criar plano detalhado
- Implementar solu√ß√£o
- Consultar vendor se necess√°rio

### 5. Verificar Funcionalidade
- Confirmar resolu√ß√£o completa
- Verificar se n√£o surgiram novos problemas
- Implementar medidas preventivas

### 6. Documentar Tudo
- Registrar descobertas
- Documentar a√ß√µes tomadas
- Registrar resultados para futura refer√™ncia

## Ferramentas Essenciais
- Event Viewer: An√°lise de logs
- Task Manager: Monitoramento
- Command Prompt: Diagn√≥sticos
- Device Manager: Status de hardware

## Exemplo Pr√°tico
**Problema:** "Computador lento"
1. **Identificar:** Lentid√£o ap√≥s boot
2. **Teoria:** Muitos programas no startup
3. **Testar:** Verificar msconfig
4. **Plano:** Desabilitar programas desnecess√°rios
5. **Verificar:** Testar performance
6. **Documentar:** Registrar solu√ß√£o`
            },
            {
                title: "Diagn√≥stico de Hardware - Testes Essenciais",
                slug: "diagnostico-hardware-testes",
                category: "hardware",
                subcategory: "diagnostico",
                priority: "alta",
                tags: "hardware,diagnostico,testes,componentes",
                summary: "Procedimentos essenciais para diagn√≥stico de hardware usando ferramentas profissionais.",
                content: `# Diagn√≥stico de Hardware

## Ferramentas Principais

### Software de Diagn√≥stico
- **CPU-Z:** Informa√ß√µes do processador
- **MemTest86:** Teste de mem√≥ria RAM
- **CrystalDiskInfo:** Status de HDs/SSDs
- **HWiNFO:** Monitoramento completo
- **Prime95:** Stress test de CPU

### Ferramentas F√≠sicas
- Mult√≠metro para voltagens
- POST Card para diagn√≥stico de boot
- Cabo de teste para fontes

## Diagn√≥stico por Componente

### Processador (CPU)
**Sintomas:** Travamentos, temperaturas altas, performance baixa

**Testes:**
- Verificar temperatura (normal < 75¬∞C)
- Executar Prime95 por 15 minutos
- Verificar frequ√™ncia vs especifica√ß√£o
- Testar voltagem

### Mem√≥ria RAM
**Sintomas:** Blue screens, travamentos, erros aleat√≥rios

**Processo:**
- Executar MemTest86 via USB boot√°vel
- Testar cada pente individualmente
- Verificar slots da placa-m√£e
- Analisar resultados (0 erros = OK)

### Armazenamento
**Sintomas:** Lentid√£o extrema, ru√≠dos, erros SMART

**Ferramentas:**
- CrystalDiskInfo para status SMART
- HD Tune para performance
- chkdsk para verifica√ß√£o de erros

### Placa de V√≠deo
**Diagn√≥stico:**
- Verificar conex√µes e ventoinhas
- Atualizar drivers
- Monitorar temperatura (normal < 85¬∞C)
- Executar FurMark por 10 minutos

### Fonte de Alimenta√ß√£o
**Testes:**
- Paperclip test para verificar liga√ß√£o
- Mult√≠metro para voltagens
- Teste sob carga real

**Voltagens Corretas:**
- +12V: 11.4V - 12.6V
- +5V: 4.75V - 5.25V
- +3.3V: 3.14V - 3.47V

## Processo de Elimina√ß√£o
1. Testar com componentes m√≠nimos
2. Adicionar componentes um por vez
3. Usar pe√ßas conhecidamente funcionais
4. Documentar cada teste realizado`
            },
            {
                title: "Troubleshooting de Rede - Modelo OSI",
                slug: "troubleshooting-rede-osi",
                category: "rede",
                subcategory: "conectividade",
                priority: "alta",
                tags: "rede,osi,conectividade,diagnostico",
                summary: "Diagn√≥stico sistem√°tico de problemas de rede usando o modelo OSI como metodologia.",
                content: `# Troubleshooting de Rede OSI

## Sequ√™ncia de Testes B√°sicos

### Comandos Essenciais
\`\`\`bash
# Teste de conectividade b√°sica
ping 127.0.0.1        # Loopback
ping [pr√≥prio IP]     # Interface local
ping [gateway]        # Gateway padr√£o
ping 8.8.8.8         # Internet
nslookup google.com   # DNS

# Verificar configura√ß√£o
ipconfig /all
netstat -an
tracert 8.8.8.8
\`\`\`

## Problemas Comuns
- IP 169.254.x.x (falha DHCP)
- Gateway incorreto
- DNS n√£o funcional
- Conflito de IP

## Solu√ß√µes R√°pidas

### "Sem Internet"
\`\`\`bash
# Diagn√≥stico r√°pido
ipconfig /all
ping 8.8.8.8
nslookup google.com

# Solu√ß√£o comum
ipconfig /release
ipconfig /renew
\`\`\`

## Ferramentas Avan√ßadas
- **Wireshark:** Captura de pacotes
- **PuTTY:** Cliente SSH/Telnet
- **Advanced IP Scanner:** Varredura de rede
- **WiFi Analyzer:** An√°lise de redes sem fio`
            },
            {
                title: "Microsoft Office - Problemas Comuns e Solu√ß√µes",
                slug: "microsoft-office-problemas-solucoes",
                category: "software",
                subcategory: "office",
                priority: "alta",
                tags: "office,word,excel,powerpoint,outlook,microsoft",
                summary: "Guia completo para resolver os problemas mais comuns do Microsoft Office: Word, Excel, PowerPoint e Outlook.",
                content: `# Microsoft Office - Troubleshooting

## Problemas Comuns do Word

### Documento N√£o Abre ou Trava
**Sintomas:** Word n√£o responde, arquivo corrompido, erro ao abrir
**Solu√ß√µes:**
- Abrir em Modo de Seguran√ßa: \`winword /safe\`
- Reparar instala√ß√£o: Painel de Controle > Programas > Microsoft Office > Alterar > Reparo R√°pido
- Recuperar documento: Arquivo > Abrir > Procurar > Selecionar arquivo > Abrir e Reparar

### Formata√ß√£o Quebrada
**Sintomas:** Texto desformatado, espa√ßamento incorreto
**Solu√ß√µes:**
- Limpar formata√ß√£o: Ctrl+Shift+N
- Copiar apenas texto: Colar Especial > Texto sem formata√ß√£o
- Verificar estilos: In√≠cio > Estilos > Gerenciar Estilos

## Problemas do Excel

### Arquivo Muito Lento
**Sintomas:** Excel demora para abrir ou calcular
**Solu√ß√µes:**
- Desabilitar suplementos: Arquivo > Op√ß√µes > Suplementos > Gerenciar Suplementos COM
- Verificar c√°lculo autom√°tico: F√≥rmulas > Op√ß√µes de C√°lculo > Autom√°tico
- Remover formata√ß√£o desnecess√°ria: Selecionar c√©lulas > Limpar > Limpar Formatos

### F√≥rmulas N√£o Funcionam
**Sintomas:** F√≥rmulas mostram texto ao inv√©s de resultado
**Solu√ß√µes:**
- Verificar se c√©lula est√° formatada como Texto: In√≠cio > N√∫mero > Geral
- Reconfigurar: F√≥rmulas > Mostrar F√≥rmulas (desmarcar)
- For√ßar rec√°lculo: Ctrl+Shift+F9

## Ferramentas de Reparo do Office
\`\`\`cmd
# Reparo r√°pido
Painel de Controle > Programas > Microsoft Office > Alterar > Reparo R√°pido
\`\`\``
            },
            {
                title: "Seguran√ßa de Endpoints e Antiv√≠rus",
                slug: "seguranca-endpoints-antivirus",
                category: "sistema",
                subcategory: "seguranca",
                priority: "critica",
                tags: "seguranca,antivirus,malware,endpoints",
                summary: "Guia de seguran√ßa de endpoints, prote√ß√£o contra malware e resposta a incidentes de seguran√ßa.",
                content: `# Seguran√ßa de Endpoints

## Tipos de Amea√ßas

### Malware Tradicional
- **V√≠rus:** C√≥digo que infecta arquivos
- **Worms:** Propaga√ß√£o aut√¥noma pela rede
- **Trojans:** Disfar√ßados como software leg√≠timo
- **Spyware:** Coleta informa√ß√µes sem consentimento
- **Ransomware:** Criptografa dados exigindo pagamento

## Windows Defender - Configura√ß√£o

### PowerShell B√°sico
\`\`\`powershell
# Verificar status
Get-MpComputerStatus

# Atualizar assinaturas
Update-MpSignature

# Scan r√°pido
Start-MpScan -ScanType QuickScan

# Scan completo
Start-MpScan -ScanType FullScan
\`\`\`

## Resposta a Incidentes

### Metodologia NIST
1. **Preparation:** Ferramentas e procedimentos
2. **Identification:** Detec√ß√£o de eventos
3. **Containment:** Isolamento da amea√ßa
4. **Eradication:** Remo√ß√£o completa
5. **Recovery:** Restaura√ß√£o de servi√ßos
6. **Lessons Learned:** An√°lise p√≥s-incidente

## Escala√ß√£o
**Quando escalar:**
- M√∫ltiplos endpoints infectados
- Suspeita de APT ou ataque direcionado
- Dados cr√≠ticos comprometidos
- Sistemas de produ√ß√£o afetados`
            }
        ];

        console.log(`üìù Inserindo ${articles.length} artigos profissionais...`);

        for (const article of articles) {
            // Usar sintaxe diferente para MySQL e SQLite
            let insertQuery;
            if (dbType === 'mysql') {
                insertQuery = `
                    INSERT INTO knowledge_base (
                        title, slug, content, summary, category, subcategory,
                        tags, priority, status, author_id, created_at, updated_at
                    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 'published', ?, NOW(), NOW())
                    ON DUPLICATE KEY UPDATE
                    title = VALUES(title),
                    content = VALUES(content),
                    summary = VALUES(summary),
                    updated_at = VALUES(updated_at)
                `;
            } else {
                // SQLite
                insertQuery = `
                    INSERT OR REPLACE INTO knowledge_base (
                        title, slug, content, summary, category, subcategory,
                        tags, priority, status, author_id, created_at, updated_at
                    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 'published', ?, datetime('now'), datetime('now'))
                `;
            }
            
            await executeQuery(insertQuery, [
                article.title,
                article.slug, 
                article.content,
                article.summary,
                article.category,
                article.subcategory,
                article.tags,
                article.priority,
                authorId
            ]);
            
            console.log(`‚úÖ ${article.title}`);
        }

        // Adicionar m√©tricas real√≠sticas
        console.log('üìä Adicionando m√©tricas...');
        
        const articleIds = await executeQuery('SELECT id FROM knowledge_base');
        for (const article of articleIds) {
            const views = Math.floor(Math.random() * 500) + 50;
            const rating = (Math.random() * 2 + 3).toFixed(1);
            
            await executeQuery(
                'UPDATE knowledge_base SET views = ?, rating = ? WHERE id = ?',
                [views, parseFloat(rating), article.id]
            );
        }

        // Estat√≠sticas finais
        const stats = await executeQuery(`
            SELECT 
                COUNT(*) as total,
                COUNT(DISTINCT category) as categories,
                AVG(rating) as avg_rating,
                SUM(views) as total_views
            FROM knowledge_base
        `);

        console.log('\nüéâ Base de Conhecimento Profissional Criada!');
        console.log('='.repeat(50));
        console.log(`üìö Total de Artigos: ${stats[0].total}`);
        console.log(`üìÇ Categorias: ${stats[0].categories}`);
        console.log(`‚≠ê Avalia√ß√£o M√©dia: ${parseFloat(stats[0].avg_rating || 0).toFixed(1)}/5.0`);
        console.log(`üëÅÔ∏è Total de Visualiza√ß√µes: ${stats[0].total_views || 0}`);
        console.log(`üíæ Banco de Dados: ${dbType.toUpperCase()}`);
        
        console.log('\nüéØ Para testar:');
        console.log('1. Execute: npm start (ou NODE_ENV=production npm start para SQLite)');
        console.log('2. Acesse a se√ß√£o "Base de Conhecimento"');
        console.log('3. Teste busca e filtros');
        
    } catch (error) {
        console.error('‚ùå Erro:', error.message);
        console.error('Stack:', error.stack);
    }
}

// Executar se chamado diretamente
if (require.main === module) {
    expandKnowledgeBase();
}

module.exports = { expandKnowledgeBase };